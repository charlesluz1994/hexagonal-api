version: "3.8"

services:
  kafka:
    container_name: kafka_hexagonal
    image: 'bitnami/kafka:4.0.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      # Define listener para broker E para controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_NODE_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_CONTROLLER_BOOTSTRAP_SERVERS=localhost:9093
    volumes:
      - kafka_data:/bitnami/kafka

  mongo:
    container_name: mongo_hexagonal
    image: 'mongo:latest'
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo_data:/data/db

volumes:
  kafka_data:
  mongo_data: